@using GigTracker.Entities;
@using GigTracker.Models;
@using GigTracker.LinqExtensions;
@model PagedResult<Gig>

@{
    var urlTemplate = Url.Action() + "?page={0}";  // used to create the link to get prev/next page
    var request = ViewContext.HttpContext.Request;
    foreach (var key in request.Query.Keys) {
        if (key == "page") {
            continue;
        }

        urlTemplate += "&" + key + "=" + request.Query[key];
    }

    var startIndex = Math.Max(Model.CurrentPage - 5, 1);
    var finishIndex = Math.Min(Model.CurrentPage + 5, Model.PageCount);

}
<div class="row">
    <div class="col-md-8 col-sm-8 items-info gt-style">
        Items @Model.FirstRowOnPage to @Model.LastRowOnPage of @Model.RowCount total
    </div>
</div>

<div class="row">
    <div class="col-md-8 col-sm-8">
        <nav aria-label="Page navigation">
            @if (Model.PageCount > 1) {   // if there's more than one page
                <ul class="pagination pagination-sm pull-right">
                    <li class="page-item gt-style">
                        <a class="page-link gt-style" href="@urlTemplate.Replace("{0}", "1")">&laquo;</a>
                    </li>
                    @for (var index = startIndex; index <= finishIndex; index++) {
                        @if (index == Model.CurrentPage) {

                            <li class="page-item">
                                <span class="page-link gt-style-hilite">@index</span>
                            </li>
                        }
                        else {

                            <li class="page-item gt-style">
                                <a class="page-link gt-style" href="@urlTemplate.Replace("{0}", index.ToString())">@index</a>
                            </li>
                        }
                    }
                    <li class="page-item">
                        <a class="page-link gt-style" href="@urlTemplate.Replace("{0}", Model.PageCount.ToString())">&raquo;</a>
                    </li>
                </ul>}
        </nav>
    </div>
</div>



<div class="row">
    <div class="col-md-5">
        <table class="table table-condensed">
            <thead>
                <tr>
                    @*<th>#</th>*@
                    <th>Artist Name</th>
                    <th>Venue Name</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody>
                @{ var i = 1; }
                @foreach (var contact in Model.Results) {
                    var rowNo = (Model.CurrentPage - 1) * Model.PageSize + i;
                    i++;
                    <tr>
                        @*<td>@rowNo</td>*@
                        <td>@contact.ArtistName</td>
                        <td>@contact.VenueName</td>
                        <td>@contact.Date</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
